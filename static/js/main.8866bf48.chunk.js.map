{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","setCurrentTodo","currentTodo","className","map","todo","id","completed","cn","title","type","onClick","TodoFilter","selectedOption","setSelectedOption","setTitle","value","onChange","event","target","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","useState","currentUser","setCurrentUser","loading","setLoading","useEffect","userId","user","finally","href","email","name","App","setTodos","vissibleTodos","useMemo","option","titl","filteredTodos","filter","trim","toLowerCase","includes","filterTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8866bf48.chunk.js","sourcesContent":["import React from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todos: Todo[]\n  setCurrentTodo: (todo: Todo) => void\n  currentTodo: Todo | null\n}\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  setCurrentTodo,\n  currentTodo,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => (\n          <tr key={todo.id} data-cy=\"todo\" className=\"\">\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed ? (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              ) : ''}\n\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p className={cn({\n                'has-text-success': todo.completed,\n                'has-text-danger': !todo.completed,\n              })}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => {\n                  setCurrentTodo(todo);\n                }}\n              >\n                <span className=\"icon\">\n                  <i className={cn('far', {\n                    'fa-eye-slash': currentTodo && currentTodo.id === todo.id,\n                    'fa-eye': !(currentTodo && currentTodo.id === todo.id),\n                  })}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n\n      </tbody>\n    </table>\n  );\n};\n","import { Dispatch, SetStateAction } from 'react';\n\ninterface Props {\n  selectedOption: string\n  setSelectedOption: Dispatch<SetStateAction<string>>\n  setTitle: Dispatch<SetStateAction<string>>\n  title: string\n}\n\nexport const TodoFilter: React.FC <Props> = ({\n  selectedOption,\n  setSelectedOption,\n  setTitle,\n  title,\n}) => {\n  const handleValueChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const { value } = event.target;\n\n    setSelectedOption(value);\n  };\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n\n    setTitle(value);\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={selectedOption}\n            onChange={handleValueChange}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={title}\n          onChange={handleTitleChange}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n        {title && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setTitle('')}\n            />\n          </span>\n        )}\n\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\n\ninterface Props {\n  todo: Todo\n  setCurrentTodo: (todo: Todo | null) => void\n}\n\nexport const TodoModal: React.FC<Props> = ({\n  todo,\n  setCurrentTodo,\n}) => {\n  const [currentUser, setCurrentUser] = useState<User | null>(null);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n    getUser(todo.userId)\n      .then((user) => {\n        setCurrentUser(user);\n      })\n      .finally(() => setLoading(false));\n  }, [todo.userId]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!loading ? (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              Todo\n              {' #'}\n              {todo.id}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => {\n                setCurrentTodo(null);\n                setLoading(false);\n              }}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {/* <strong className=\"has-text-success\">Done</strong> */}\n              {todo.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n              {' by '}\n\n              <a href={currentUser?.email}>\n                {currentUser?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      ) : (\n        <Loader />\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useMemo, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedOption, setSelectedOption] = useState('all');\n  const [title, setTitle] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [currentTodo, setCurrentTodo] = useState<Todo | null>(null);\n\n  useEffect(() => {\n    setLoading(true);\n    getTodos()\n      .then((todo) => {\n        setTodos(todo);\n      })\n      .finally(() => setLoading(false));\n  }, []);\n\n  const filterTodos = (option: string, titl: string): Todo[] => {\n    let filteredTodos = todos;\n\n    switch (option) {\n      case 'active':\n        filteredTodos = todos.filter(todo => !todo.completed);\n        break;\n\n      case 'completed':\n        filteredTodos = todos.filter(todo => todo.completed);\n        break;\n\n      default:\n        filteredTodos = todos;\n        break;\n    }\n\n    if (titl.trim() !== '') {\n      filteredTodos = filteredTodos.filter(todo => todo.title.toLowerCase().includes(titl.toLowerCase()));\n    }\n\n    return filteredTodos;\n  };\n\n  const vissibleTodos = useMemo(() => {\n    return filterTodos(selectedOption, title);\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [selectedOption, title, todos]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                selectedOption={selectedOption}\n                setSelectedOption={setSelectedOption}\n                setTitle={setTitle}\n                title={title}\n              />\n            </div>\n\n            <div className=\"block\">\n              {loading && <Loader />}\n              {!loading && (\n                <TodoList\n                  todos={vissibleTodos}\n                  setCurrentTodo={setCurrentTodo}\n                  currentTodo={currentTodo}\n                />\n              )}\n\n            </div>\n          </div>\n        </div>\n      </div>\n      {currentTodo && (\n        <TodoModal\n          todo={currentTodo}\n          setCurrentTodo={setCurrentTodo}\n        />\n      )}\n\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}